// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: scene_file.proto

package dev.xfj.protobuf;

/**
 * Protobuf type {@code dev.xfj.protobuf.CameraFile}
 */
public final class CameraFile extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:dev.xfj.protobuf.CameraFile)
    CameraFileOrBuilder {
private static final long serialVersionUID = 0L;
  // Use CameraFile.newBuilder() to construct.
  private CameraFile(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private CameraFile() {
    projectionType_ = 0;
  }

  @java.lang.Override
  @SuppressWarnings({"unused"})
  protected java.lang.Object newInstance(
      UnusedPrivateParameter unused) {
    return new CameraFile();
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return dev.xfj.protobuf.Scene.internal_static_dev_xfj_protobuf_CameraFile_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return dev.xfj.protobuf.Scene.internal_static_dev_xfj_protobuf_CameraFile_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            dev.xfj.protobuf.CameraFile.class, dev.xfj.protobuf.CameraFile.Builder.class);
  }

  /**
   * Protobuf enum {@code dev.xfj.protobuf.CameraFile.ProjectionType}
   */
  public enum ProjectionType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>Perspective = 0;</code>
     */
    Perspective(0),
    /**
     * <code>Orthographic = 1;</code>
     */
    Orthographic(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <code>Perspective = 0;</code>
     */
    public static final int Perspective_VALUE = 0;
    /**
     * <code>Orthographic = 1;</code>
     */
    public static final int Orthographic_VALUE = 1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ProjectionType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static ProjectionType forNumber(int value) {
      switch (value) {
        case 0: return Perspective;
        case 1: return Orthographic;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ProjectionType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ProjectionType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ProjectionType>() {
            public ProjectionType findValueByNumber(int number) {
              return ProjectionType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return dev.xfj.protobuf.CameraFile.getDescriptor().getEnumTypes().get(0);
    }

    private static final ProjectionType[] VALUES = values();

    public static ProjectionType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ProjectionType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:dev.xfj.protobuf.CameraFile.ProjectionType)
  }

  public static final int PROJECTION_TYPE_FIELD_NUMBER = 1;
  private int projectionType_ = 0;
  /**
   * <code>.dev.xfj.protobuf.CameraFile.ProjectionType projection_type = 1;</code>
   * @return The enum numeric value on the wire for projectionType.
   */
  @java.lang.Override public int getProjectionTypeValue() {
    return projectionType_;
  }
  /**
   * <code>.dev.xfj.protobuf.CameraFile.ProjectionType projection_type = 1;</code>
   * @return The projectionType.
   */
  @java.lang.Override public dev.xfj.protobuf.CameraFile.ProjectionType getProjectionType() {
    dev.xfj.protobuf.CameraFile.ProjectionType result = dev.xfj.protobuf.CameraFile.ProjectionType.forNumber(projectionType_);
    return result == null ? dev.xfj.protobuf.CameraFile.ProjectionType.UNRECOGNIZED : result;
  }

  public static final int PERSPECTIVE_FOV_FIELD_NUMBER = 2;
  private float perspectiveFov_ = 0F;
  /**
   * <code>float perspective_fov = 2;</code>
   * @return The perspectiveFov.
   */
  @java.lang.Override
  public float getPerspectiveFov() {
    return perspectiveFov_;
  }

  public static final int PERSPECTIVE_NEAR_FIELD_NUMBER = 3;
  private float perspectiveNear_ = 0F;
  /**
   * <code>float perspective_near = 3;</code>
   * @return The perspectiveNear.
   */
  @java.lang.Override
  public float getPerspectiveNear() {
    return perspectiveNear_;
  }

  public static final int PERSPECTIVE_FAR_FIELD_NUMBER = 4;
  private float perspectiveFar_ = 0F;
  /**
   * <code>float perspective_far = 4;</code>
   * @return The perspectiveFar.
   */
  @java.lang.Override
  public float getPerspectiveFar() {
    return perspectiveFar_;
  }

  public static final int ORTHOGRAPHIC_SIZE_FIELD_NUMBER = 5;
  private float orthographicSize_ = 0F;
  /**
   * <code>float orthographic_size = 5;</code>
   * @return The orthographicSize.
   */
  @java.lang.Override
  public float getOrthographicSize() {
    return orthographicSize_;
  }

  public static final int ORTHOGRAPHIC_NEAR_FIELD_NUMBER = 6;
  private float orthographicNear_ = 0F;
  /**
   * <code>float orthographic_near = 6;</code>
   * @return The orthographicNear.
   */
  @java.lang.Override
  public float getOrthographicNear() {
    return orthographicNear_;
  }

  public static final int ORTHOGRAPHIC_FAR_FIELD_NUMBER = 7;
  private float orthographicFar_ = 0F;
  /**
   * <code>float orthographic_far = 7;</code>
   * @return The orthographicFar.
   */
  @java.lang.Override
  public float getOrthographicFar() {
    return orthographicFar_;
  }

  public static final int ASPECT_RATIO_FIELD_NUMBER = 8;
  private float aspectRatio_ = 0F;
  /**
   * <code>float aspect_ratio = 8;</code>
   * @return The aspectRatio.
   */
  @java.lang.Override
  public float getAspectRatio() {
    return aspectRatio_;
  }

  public static final int PRIMARY_FIELD_NUMBER = 9;
  private boolean primary_ = false;
  /**
   * <code>bool primary = 9;</code>
   * @return The primary.
   */
  @java.lang.Override
  public boolean getPrimary() {
    return primary_;
  }

  public static final int FIXED_ASPECT_RATIO_FIELD_NUMBER = 10;
  private boolean fixedAspectRatio_ = false;
  /**
   * <code>bool fixed_aspect_ratio = 10;</code>
   * @return The fixedAspectRatio.
   */
  @java.lang.Override
  public boolean getFixedAspectRatio() {
    return fixedAspectRatio_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (projectionType_ != dev.xfj.protobuf.CameraFile.ProjectionType.Perspective.getNumber()) {
      output.writeEnum(1, projectionType_);
    }
    if (java.lang.Float.floatToRawIntBits(perspectiveFov_) != 0) {
      output.writeFloat(2, perspectiveFov_);
    }
    if (java.lang.Float.floatToRawIntBits(perspectiveNear_) != 0) {
      output.writeFloat(3, perspectiveNear_);
    }
    if (java.lang.Float.floatToRawIntBits(perspectiveFar_) != 0) {
      output.writeFloat(4, perspectiveFar_);
    }
    if (java.lang.Float.floatToRawIntBits(orthographicSize_) != 0) {
      output.writeFloat(5, orthographicSize_);
    }
    if (java.lang.Float.floatToRawIntBits(orthographicNear_) != 0) {
      output.writeFloat(6, orthographicNear_);
    }
    if (java.lang.Float.floatToRawIntBits(orthographicFar_) != 0) {
      output.writeFloat(7, orthographicFar_);
    }
    if (java.lang.Float.floatToRawIntBits(aspectRatio_) != 0) {
      output.writeFloat(8, aspectRatio_);
    }
    if (primary_ != false) {
      output.writeBool(9, primary_);
    }
    if (fixedAspectRatio_ != false) {
      output.writeBool(10, fixedAspectRatio_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (projectionType_ != dev.xfj.protobuf.CameraFile.ProjectionType.Perspective.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(1, projectionType_);
    }
    if (java.lang.Float.floatToRawIntBits(perspectiveFov_) != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(2, perspectiveFov_);
    }
    if (java.lang.Float.floatToRawIntBits(perspectiveNear_) != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(3, perspectiveNear_);
    }
    if (java.lang.Float.floatToRawIntBits(perspectiveFar_) != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(4, perspectiveFar_);
    }
    if (java.lang.Float.floatToRawIntBits(orthographicSize_) != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(5, orthographicSize_);
    }
    if (java.lang.Float.floatToRawIntBits(orthographicNear_) != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(6, orthographicNear_);
    }
    if (java.lang.Float.floatToRawIntBits(orthographicFar_) != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(7, orthographicFar_);
    }
    if (java.lang.Float.floatToRawIntBits(aspectRatio_) != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeFloatSize(8, aspectRatio_);
    }
    if (primary_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(9, primary_);
    }
    if (fixedAspectRatio_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(10, fixedAspectRatio_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof dev.xfj.protobuf.CameraFile)) {
      return super.equals(obj);
    }
    dev.xfj.protobuf.CameraFile other = (dev.xfj.protobuf.CameraFile) obj;

    if (projectionType_ != other.projectionType_) return false;
    if (java.lang.Float.floatToIntBits(getPerspectiveFov())
        != java.lang.Float.floatToIntBits(
            other.getPerspectiveFov())) return false;
    if (java.lang.Float.floatToIntBits(getPerspectiveNear())
        != java.lang.Float.floatToIntBits(
            other.getPerspectiveNear())) return false;
    if (java.lang.Float.floatToIntBits(getPerspectiveFar())
        != java.lang.Float.floatToIntBits(
            other.getPerspectiveFar())) return false;
    if (java.lang.Float.floatToIntBits(getOrthographicSize())
        != java.lang.Float.floatToIntBits(
            other.getOrthographicSize())) return false;
    if (java.lang.Float.floatToIntBits(getOrthographicNear())
        != java.lang.Float.floatToIntBits(
            other.getOrthographicNear())) return false;
    if (java.lang.Float.floatToIntBits(getOrthographicFar())
        != java.lang.Float.floatToIntBits(
            other.getOrthographicFar())) return false;
    if (java.lang.Float.floatToIntBits(getAspectRatio())
        != java.lang.Float.floatToIntBits(
            other.getAspectRatio())) return false;
    if (getPrimary()
        != other.getPrimary()) return false;
    if (getFixedAspectRatio()
        != other.getFixedAspectRatio()) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + PROJECTION_TYPE_FIELD_NUMBER;
    hash = (53 * hash) + projectionType_;
    hash = (37 * hash) + PERSPECTIVE_FOV_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getPerspectiveFov());
    hash = (37 * hash) + PERSPECTIVE_NEAR_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getPerspectiveNear());
    hash = (37 * hash) + PERSPECTIVE_FAR_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getPerspectiveFar());
    hash = (37 * hash) + ORTHOGRAPHIC_SIZE_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getOrthographicSize());
    hash = (37 * hash) + ORTHOGRAPHIC_NEAR_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getOrthographicNear());
    hash = (37 * hash) + ORTHOGRAPHIC_FAR_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getOrthographicFar());
    hash = (37 * hash) + ASPECT_RATIO_FIELD_NUMBER;
    hash = (53 * hash) + java.lang.Float.floatToIntBits(
        getAspectRatio());
    hash = (37 * hash) + PRIMARY_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getPrimary());
    hash = (37 * hash) + FIXED_ASPECT_RATIO_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getFixedAspectRatio());
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static dev.xfj.protobuf.CameraFile parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static dev.xfj.protobuf.CameraFile parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static dev.xfj.protobuf.CameraFile parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static dev.xfj.protobuf.CameraFile parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static dev.xfj.protobuf.CameraFile parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static dev.xfj.protobuf.CameraFile parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static dev.xfj.protobuf.CameraFile parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static dev.xfj.protobuf.CameraFile parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static dev.xfj.protobuf.CameraFile parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static dev.xfj.protobuf.CameraFile parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static dev.xfj.protobuf.CameraFile parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static dev.xfj.protobuf.CameraFile parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(dev.xfj.protobuf.CameraFile prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code dev.xfj.protobuf.CameraFile}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:dev.xfj.protobuf.CameraFile)
      dev.xfj.protobuf.CameraFileOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return dev.xfj.protobuf.Scene.internal_static_dev_xfj_protobuf_CameraFile_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return dev.xfj.protobuf.Scene.internal_static_dev_xfj_protobuf_CameraFile_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              dev.xfj.protobuf.CameraFile.class, dev.xfj.protobuf.CameraFile.Builder.class);
    }

    // Construct using dev.xfj.protobuf.CameraFile.newBuilder()
    private Builder() {

    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);

    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      projectionType_ = 0;
      perspectiveFov_ = 0F;
      perspectiveNear_ = 0F;
      perspectiveFar_ = 0F;
      orthographicSize_ = 0F;
      orthographicNear_ = 0F;
      orthographicFar_ = 0F;
      aspectRatio_ = 0F;
      primary_ = false;
      fixedAspectRatio_ = false;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return dev.xfj.protobuf.Scene.internal_static_dev_xfj_protobuf_CameraFile_descriptor;
    }

    @java.lang.Override
    public dev.xfj.protobuf.CameraFile getDefaultInstanceForType() {
      return dev.xfj.protobuf.CameraFile.getDefaultInstance();
    }

    @java.lang.Override
    public dev.xfj.protobuf.CameraFile build() {
      dev.xfj.protobuf.CameraFile result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public dev.xfj.protobuf.CameraFile buildPartial() {
      dev.xfj.protobuf.CameraFile result = new dev.xfj.protobuf.CameraFile(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(dev.xfj.protobuf.CameraFile result) {
      int from_bitField0_ = bitField0_;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.projectionType_ = projectionType_;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.perspectiveFov_ = perspectiveFov_;
      }
      if (((from_bitField0_ & 0x00000004) != 0)) {
        result.perspectiveNear_ = perspectiveNear_;
      }
      if (((from_bitField0_ & 0x00000008) != 0)) {
        result.perspectiveFar_ = perspectiveFar_;
      }
      if (((from_bitField0_ & 0x00000010) != 0)) {
        result.orthographicSize_ = orthographicSize_;
      }
      if (((from_bitField0_ & 0x00000020) != 0)) {
        result.orthographicNear_ = orthographicNear_;
      }
      if (((from_bitField0_ & 0x00000040) != 0)) {
        result.orthographicFar_ = orthographicFar_;
      }
      if (((from_bitField0_ & 0x00000080) != 0)) {
        result.aspectRatio_ = aspectRatio_;
      }
      if (((from_bitField0_ & 0x00000100) != 0)) {
        result.primary_ = primary_;
      }
      if (((from_bitField0_ & 0x00000200) != 0)) {
        result.fixedAspectRatio_ = fixedAspectRatio_;
      }
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof dev.xfj.protobuf.CameraFile) {
        return mergeFrom((dev.xfj.protobuf.CameraFile)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(dev.xfj.protobuf.CameraFile other) {
      if (other == dev.xfj.protobuf.CameraFile.getDefaultInstance()) return this;
      if (other.projectionType_ != 0) {
        setProjectionTypeValue(other.getProjectionTypeValue());
      }
      if (other.getPerspectiveFov() != 0F) {
        setPerspectiveFov(other.getPerspectiveFov());
      }
      if (other.getPerspectiveNear() != 0F) {
        setPerspectiveNear(other.getPerspectiveNear());
      }
      if (other.getPerspectiveFar() != 0F) {
        setPerspectiveFar(other.getPerspectiveFar());
      }
      if (other.getOrthographicSize() != 0F) {
        setOrthographicSize(other.getOrthographicSize());
      }
      if (other.getOrthographicNear() != 0F) {
        setOrthographicNear(other.getOrthographicNear());
      }
      if (other.getOrthographicFar() != 0F) {
        setOrthographicFar(other.getOrthographicFar());
      }
      if (other.getAspectRatio() != 0F) {
        setAspectRatio(other.getAspectRatio());
      }
      if (other.getPrimary() != false) {
        setPrimary(other.getPrimary());
      }
      if (other.getFixedAspectRatio() != false) {
        setFixedAspectRatio(other.getFixedAspectRatio());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              projectionType_ = input.readEnum();
              bitField0_ |= 0x00000001;
              break;
            } // case 8
            case 21: {
              perspectiveFov_ = input.readFloat();
              bitField0_ |= 0x00000002;
              break;
            } // case 21
            case 29: {
              perspectiveNear_ = input.readFloat();
              bitField0_ |= 0x00000004;
              break;
            } // case 29
            case 37: {
              perspectiveFar_ = input.readFloat();
              bitField0_ |= 0x00000008;
              break;
            } // case 37
            case 45: {
              orthographicSize_ = input.readFloat();
              bitField0_ |= 0x00000010;
              break;
            } // case 45
            case 53: {
              orthographicNear_ = input.readFloat();
              bitField0_ |= 0x00000020;
              break;
            } // case 53
            case 61: {
              orthographicFar_ = input.readFloat();
              bitField0_ |= 0x00000040;
              break;
            } // case 61
            case 69: {
              aspectRatio_ = input.readFloat();
              bitField0_ |= 0x00000080;
              break;
            } // case 69
            case 72: {
              primary_ = input.readBool();
              bitField0_ |= 0x00000100;
              break;
            } // case 72
            case 80: {
              fixedAspectRatio_ = input.readBool();
              bitField0_ |= 0x00000200;
              break;
            } // case 80
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private int projectionType_ = 0;
    /**
     * <code>.dev.xfj.protobuf.CameraFile.ProjectionType projection_type = 1;</code>
     * @return The enum numeric value on the wire for projectionType.
     */
    @java.lang.Override public int getProjectionTypeValue() {
      return projectionType_;
    }
    /**
     * <code>.dev.xfj.protobuf.CameraFile.ProjectionType projection_type = 1;</code>
     * @param value The enum numeric value on the wire for projectionType to set.
     * @return This builder for chaining.
     */
    public Builder setProjectionTypeValue(int value) {
      projectionType_ = value;
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <code>.dev.xfj.protobuf.CameraFile.ProjectionType projection_type = 1;</code>
     * @return The projectionType.
     */
    @java.lang.Override
    public dev.xfj.protobuf.CameraFile.ProjectionType getProjectionType() {
      dev.xfj.protobuf.CameraFile.ProjectionType result = dev.xfj.protobuf.CameraFile.ProjectionType.forNumber(projectionType_);
      return result == null ? dev.xfj.protobuf.CameraFile.ProjectionType.UNRECOGNIZED : result;
    }
    /**
     * <code>.dev.xfj.protobuf.CameraFile.ProjectionType projection_type = 1;</code>
     * @param value The projectionType to set.
     * @return This builder for chaining.
     */
    public Builder setProjectionType(dev.xfj.protobuf.CameraFile.ProjectionType value) {
      if (value == null) {
        throw new NullPointerException();
      }
      bitField0_ |= 0x00000001;
      projectionType_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <code>.dev.xfj.protobuf.CameraFile.ProjectionType projection_type = 1;</code>
     * @return This builder for chaining.
     */
    public Builder clearProjectionType() {
      bitField0_ = (bitField0_ & ~0x00000001);
      projectionType_ = 0;
      onChanged();
      return this;
    }

    private float perspectiveFov_ ;
    /**
     * <code>float perspective_fov = 2;</code>
     * @return The perspectiveFov.
     */
    @java.lang.Override
    public float getPerspectiveFov() {
      return perspectiveFov_;
    }
    /**
     * <code>float perspective_fov = 2;</code>
     * @param value The perspectiveFov to set.
     * @return This builder for chaining.
     */
    public Builder setPerspectiveFov(float value) {

      perspectiveFov_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <code>float perspective_fov = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearPerspectiveFov() {
      bitField0_ = (bitField0_ & ~0x00000002);
      perspectiveFov_ = 0F;
      onChanged();
      return this;
    }

    private float perspectiveNear_ ;
    /**
     * <code>float perspective_near = 3;</code>
     * @return The perspectiveNear.
     */
    @java.lang.Override
    public float getPerspectiveNear() {
      return perspectiveNear_;
    }
    /**
     * <code>float perspective_near = 3;</code>
     * @param value The perspectiveNear to set.
     * @return This builder for chaining.
     */
    public Builder setPerspectiveNear(float value) {

      perspectiveNear_ = value;
      bitField0_ |= 0x00000004;
      onChanged();
      return this;
    }
    /**
     * <code>float perspective_near = 3;</code>
     * @return This builder for chaining.
     */
    public Builder clearPerspectiveNear() {
      bitField0_ = (bitField0_ & ~0x00000004);
      perspectiveNear_ = 0F;
      onChanged();
      return this;
    }

    private float perspectiveFar_ ;
    /**
     * <code>float perspective_far = 4;</code>
     * @return The perspectiveFar.
     */
    @java.lang.Override
    public float getPerspectiveFar() {
      return perspectiveFar_;
    }
    /**
     * <code>float perspective_far = 4;</code>
     * @param value The perspectiveFar to set.
     * @return This builder for chaining.
     */
    public Builder setPerspectiveFar(float value) {

      perspectiveFar_ = value;
      bitField0_ |= 0x00000008;
      onChanged();
      return this;
    }
    /**
     * <code>float perspective_far = 4;</code>
     * @return This builder for chaining.
     */
    public Builder clearPerspectiveFar() {
      bitField0_ = (bitField0_ & ~0x00000008);
      perspectiveFar_ = 0F;
      onChanged();
      return this;
    }

    private float orthographicSize_ ;
    /**
     * <code>float orthographic_size = 5;</code>
     * @return The orthographicSize.
     */
    @java.lang.Override
    public float getOrthographicSize() {
      return orthographicSize_;
    }
    /**
     * <code>float orthographic_size = 5;</code>
     * @param value The orthographicSize to set.
     * @return This builder for chaining.
     */
    public Builder setOrthographicSize(float value) {

      orthographicSize_ = value;
      bitField0_ |= 0x00000010;
      onChanged();
      return this;
    }
    /**
     * <code>float orthographic_size = 5;</code>
     * @return This builder for chaining.
     */
    public Builder clearOrthographicSize() {
      bitField0_ = (bitField0_ & ~0x00000010);
      orthographicSize_ = 0F;
      onChanged();
      return this;
    }

    private float orthographicNear_ ;
    /**
     * <code>float orthographic_near = 6;</code>
     * @return The orthographicNear.
     */
    @java.lang.Override
    public float getOrthographicNear() {
      return orthographicNear_;
    }
    /**
     * <code>float orthographic_near = 6;</code>
     * @param value The orthographicNear to set.
     * @return This builder for chaining.
     */
    public Builder setOrthographicNear(float value) {

      orthographicNear_ = value;
      bitField0_ |= 0x00000020;
      onChanged();
      return this;
    }
    /**
     * <code>float orthographic_near = 6;</code>
     * @return This builder for chaining.
     */
    public Builder clearOrthographicNear() {
      bitField0_ = (bitField0_ & ~0x00000020);
      orthographicNear_ = 0F;
      onChanged();
      return this;
    }

    private float orthographicFar_ ;
    /**
     * <code>float orthographic_far = 7;</code>
     * @return The orthographicFar.
     */
    @java.lang.Override
    public float getOrthographicFar() {
      return orthographicFar_;
    }
    /**
     * <code>float orthographic_far = 7;</code>
     * @param value The orthographicFar to set.
     * @return This builder for chaining.
     */
    public Builder setOrthographicFar(float value) {

      orthographicFar_ = value;
      bitField0_ |= 0x00000040;
      onChanged();
      return this;
    }
    /**
     * <code>float orthographic_far = 7;</code>
     * @return This builder for chaining.
     */
    public Builder clearOrthographicFar() {
      bitField0_ = (bitField0_ & ~0x00000040);
      orthographicFar_ = 0F;
      onChanged();
      return this;
    }

    private float aspectRatio_ ;
    /**
     * <code>float aspect_ratio = 8;</code>
     * @return The aspectRatio.
     */
    @java.lang.Override
    public float getAspectRatio() {
      return aspectRatio_;
    }
    /**
     * <code>float aspect_ratio = 8;</code>
     * @param value The aspectRatio to set.
     * @return This builder for chaining.
     */
    public Builder setAspectRatio(float value) {

      aspectRatio_ = value;
      bitField0_ |= 0x00000080;
      onChanged();
      return this;
    }
    /**
     * <code>float aspect_ratio = 8;</code>
     * @return This builder for chaining.
     */
    public Builder clearAspectRatio() {
      bitField0_ = (bitField0_ & ~0x00000080);
      aspectRatio_ = 0F;
      onChanged();
      return this;
    }

    private boolean primary_ ;
    /**
     * <code>bool primary = 9;</code>
     * @return The primary.
     */
    @java.lang.Override
    public boolean getPrimary() {
      return primary_;
    }
    /**
     * <code>bool primary = 9;</code>
     * @param value The primary to set.
     * @return This builder for chaining.
     */
    public Builder setPrimary(boolean value) {

      primary_ = value;
      bitField0_ |= 0x00000100;
      onChanged();
      return this;
    }
    /**
     * <code>bool primary = 9;</code>
     * @return This builder for chaining.
     */
    public Builder clearPrimary() {
      bitField0_ = (bitField0_ & ~0x00000100);
      primary_ = false;
      onChanged();
      return this;
    }

    private boolean fixedAspectRatio_ ;
    /**
     * <code>bool fixed_aspect_ratio = 10;</code>
     * @return The fixedAspectRatio.
     */
    @java.lang.Override
    public boolean getFixedAspectRatio() {
      return fixedAspectRatio_;
    }
    /**
     * <code>bool fixed_aspect_ratio = 10;</code>
     * @param value The fixedAspectRatio to set.
     * @return This builder for chaining.
     */
    public Builder setFixedAspectRatio(boolean value) {

      fixedAspectRatio_ = value;
      bitField0_ |= 0x00000200;
      onChanged();
      return this;
    }
    /**
     * <code>bool fixed_aspect_ratio = 10;</code>
     * @return This builder for chaining.
     */
    public Builder clearFixedAspectRatio() {
      bitField0_ = (bitField0_ & ~0x00000200);
      fixedAspectRatio_ = false;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:dev.xfj.protobuf.CameraFile)
  }

  // @@protoc_insertion_point(class_scope:dev.xfj.protobuf.CameraFile)
  private static final dev.xfj.protobuf.CameraFile DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new dev.xfj.protobuf.CameraFile();
  }

  public static dev.xfj.protobuf.CameraFile getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<CameraFile>
      PARSER = new com.google.protobuf.AbstractParser<CameraFile>() {
    @java.lang.Override
    public CameraFile parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<CameraFile> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<CameraFile> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public dev.xfj.protobuf.CameraFile getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

